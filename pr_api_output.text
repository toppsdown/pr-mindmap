[
  {
    "sha": "c97ab997b7cc217b78eb564d92ca47c39a6fafdf",
    "filename": "app/assets/javascripts/components/onboarding_validator.js.coffee",
    "status": "modified",
    "additions": 0,
    "deletions": 12,
    "changes": 12,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/assets/javascripts/components/onboarding_validator.js.coffee",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/assets/javascripts/components/onboarding_validator.js.coffee",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/assets/javascripts/components/onboarding_validator.js.coffee?ref=24e31c350ac5fd0e0007a12d64cbf0df9fb8475d",
    "patch": "@@ -221,18 +221,6 @@ root.PG = do ( module, $ ) ->\n       'user[secondary_team_id]': {\n         'false': I18n.t('js.onboarding.secondary_team_id_error', team: $el.data('team') || ''),\n         'true': I18n.t('js.onboarding.secondary_team_id_success', team: $el.data('team') || '')\n-      },\n-      'team[ad_hoc_invites_attributes][][email]': {\n-        'false': I18n.t('js.onboarding.email_error'),\n-        'true': I18n.t('js.onboarding.email_success')\n-      },\n-      'team[ad_hoc_invites_attributes][][email]_domain': {\n-        'false': I18n.t('js.onboarding.email_domain_error'),\n-        'true': I18n.t('js.onboarding.email_success')\n-      },\n-      'team[ad_hoc_invites_attributes][][email]_presence': {\n-        'false': I18n.t('js.onboarding.email_error'),\n-        'true': I18n.t('js.onboarding.email_success')\n       }\n     }[name][success]\n "
  },
  {
    "sha": "3947bdac37164c98ee1be472b377578161f1f444",
    "filename": "app/assets/javascripts/pages/competition_projects.js.coffee",
    "status": "modified",
    "additions": 0,
    "deletions": 8,
    "changes": 8,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/assets/javascripts/pages/competition_projects.js.coffee",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/assets/javascripts/pages/competition_projects.js.coffee",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/assets/javascripts/pages/competition_projects.js.coffee?ref=24e31c350ac5fd0e0007a12d64cbf0df9fb8475d",
    "patch": "@@ -25,14 +25,6 @@ root.PG = do ( module, $ ) ->\n \n     PG.utils.bindPhotoGrid()\n \n-  self.showJoinTeamModal = ->\n-    # HACK: disable all click handlers\n-    $(document).off()\n-\n-    $('#join-ad-hoc-team-modal').modal\n-      backdrop: 'static'\n-      keyboard: false\n-\n   # Private\n   bindCompleted = ->\n     $(document).on 'click', '.js-load-all', ->"
  },
  {
    "sha": "c4d1b0c45696aece47baba8fe6eb7ec11f528e4e",
    "filename": "app/assets/javascripts/pages/initiatives.js.coffee",
    "status": "modified",
    "additions": 0,
    "deletions": 7,
    "changes": 7,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/assets/javascripts/pages/initiatives.js.coffee",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/assets/javascripts/pages/initiatives.js.coffee",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/assets/javascripts/pages/initiatives.js.coffee?ref=24e31c350ac5fd0e0007a12d64cbf0df9fb8475d",
    "patch": "@@ -9,7 +9,6 @@ root.PG = do ( module, $ ) ->\n     PG.utils.bindFollowProject()\n     PG.utils.bindHeightResize('.js-height-user-participating .project-card-details')\n     PG.utils.bindHeightResize('.js-height-not-participating .project-card-details')\n-    bindProjectLinks()\n \n   self.show = ->\n     # Update locked levels after completing act\n@@ -107,12 +106,6 @@ root.PG = do ( module, $ ) ->\n     else\n       PG.utils.getNextOnboardingStep( next )\n \n-  bindProjectLinks = ->\n-    if PG.env.userNotOnTeamYet\n-      $('.js-require-team').on 'click', (e) ->\n-        e.preventDefault()\n-        $('#join-ad-hoc-team-modal').modal('show')\n-\n   checkUnlockLevel = ( level = PG.env.initiativeTier ) ->\n     $tierDetails = $(\".tier-details.level-#{level}\")\n "
  },
  {
    "sha": "798111966f2ac817eb527c4489d7a72aee29d663",
    "filename": "app/controllers/application_controller.rb",
    "status": "modified",
    "additions": 0,
    "deletions": 11,
    "changes": 11,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/controllers/application_controller.rb",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/controllers/application_controller.rb",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/controllers/application_controller.rb?ref=24e31c350ac5fd0e0007a12d64cbf0df9fb8475d",
    "patch": "@@ -155,17 +155,6 @@ def setup_new_relic_extra_attributes\n     end\n   end\n \n-  def show_ad_hoc_teams_notice\n-    if current_user.not_on_ad_hoc_team_yet?\n-      message = t('application_controller.join_team_html',\n-        join_link: view_context.link_to(t('application_controller.join_team_text'), teams_path),\n-        create_link: view_context.link_to(t('application_controller.new_team_text'), new_team_path)\n-      )\n-\n-      flash.now[:attention] = message.html_safe\n-    end\n-  end\n-\n   def skip_nps_survey\n     @skip_nps_survey = true\n   end"
  },
  {
    "sha": "afee559a2b25d7619d8b2a4d7e6352291a580a4d",
    "filename": "app/controllers/concerns/guards.rb",
    "status": "modified",
    "additions": 0,
    "deletions": 4,
    "changes": 4,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/controllers/concerns/guards.rb",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/controllers/concerns/guards.rb",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/controllers/concerns/guards.rb?ref=24e31c350ac5fd0e0007a12d64cbf0df9fb8475d",
    "patch": "@@ -4,10 +4,6 @@ module Guards\n   private\n \n   # guard_*\n-  def guard_ad_hoc_teams!\n-    send_user_home unless signed_in? && current_brand.ad_hoc_teams?\n-  end\n-\n   def guard_brand_mode!\n     if !signed_in? || global_mode?\n       render 'setup/shared/brand_mode_notice', layout: 'setup'"
  },
  {
    "sha": "aef58c37fd2e03c0b1ae8612942195ae3dec8397",
    "filename": "app/controllers/concerns/session_utilities.rb",
    "status": "modified",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/controllers/concerns/session_utilities.rb",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/controllers/concerns/session_utilities.rb",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/controllers/concerns/session_utilities.rb?ref=24e31c350ac5fd0e0007a12d64cbf0df9fb8475d",
    "patch": "@@ -43,12 +43,6 @@ def assign_default_user_data_for!(user)\n     user.join_default_initiatives!\n \n     user.assign_default_avatar! if user.image.blank?\n-\n-    team = current_brand.teams.find_by_id(session[:assigned_team_id])\n-    if team\n-      user.add_to_ad_hoc_team!(team)\n-      session.delete :assigned_team_id\n-    end\n   end\n \n   def check_for_expired_password"
  },
  {
    "sha": "2473955bf1fde6c8f10595c3d1495784c1392191",
    "filename": "app/controllers/home_controller.rb",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/controllers/home_controller.rb",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/controllers/home_controller.rb",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/controllers/home_controller.rb?ref=24e31c350ac5fd0e0007a12d64cbf0df9fb8475d",
    "patch": "@@ -10,7 +10,6 @@ class HomeController < ApplicationController\n   skip_before_action :guard_employee_engagement!, only: [:landing, :legal]\n   skip_before_action :ensure_user_not_missing_profile_info, only: [:landing, :legal]\n   skip_before_action :ensure_user_not_missing_profile_info, only: :dashboard, if: :skip_ensure_user_not_missing_profile_info?\n-  before_filter :show_ad_hoc_teams_notice, only: :dashboard, if: :ad_hoc_teams?\n \n   def dashboard\n     if current_user.show_engagement_survey? || params[:survey].present?"
  },
  {
    "sha": "a988eb66750cff232281bd2c8ebbe7490415f560",
    "filename": "app/controllers/initiatives_controller.rb",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/controllers/initiatives_controller.rb",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/controllers/initiatives_controller.rb",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/controllers/initiatives_controller.rb?ref=24e31c350ac5fd0e0007a12d64cbf0df9fb8475d",
    "patch": "@@ -8,7 +8,6 @@ class InitiativesController < ApplicationController\n   before_filter :find_in_project, only: [:activity, :show, :tier]\n   before_filter :find_points_for_current_user, only: [:show, :project_bar, :tier_header]\n   before_filter :set_no_cache, only: %i(show tier tier_header)\n-  before_filter :show_ad_hoc_teams_notice, only: :index\n \n   def activity\n     @events ="
  },
  {
    "sha": "52cd47421b517f233a28f3b8be84b95a681a9838",
    "filename": "app/controllers/teams_controller.rb",
    "status": "modified",
    "additions": 2,
    "deletions": 122,
    "changes": 124,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/controllers/teams_controller.rb",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/controllers/teams_controller.rb",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/controllers/teams_controller.rb?ref=24e31c350ac5fd0e0007a12d64cbf0df9fb8475d",
    "patch": "@@ -1,66 +1,12 @@\n class TeamsController < ApplicationController\n-  before_action :find_user, only: :accept_user\n   before_action :find_team,\n-    only: %i(accept_user child_teams invite_landing join_request leave show)\n+    only: %i(child_teams show)\n   before_action :find_time, only: [:index, :show]\n-  before_action :guard_ad_hoc_teams!,\n-    only: %i(accept_user create edit join_request leave new update)\n   before_action :set_brand_impact_toggles, only: [:index, :show]\n-  before_action :verify_invite_email, only: :invite_landing\n-  skip_before_filter :authorize, only: [:child_teams, :invite_landing]\n+  skip_before_filter :authorize, only: [:child_teams]\n   skip_before_filter :ensure_user_not_missing_profile_info, only: :child_teams\n   skip_before_filter :guard_brand_platform_hostname!, only: [:child_teams]\n \n-  def accept_user\n-    if @user.on_ad_hoc_team?\n-      flash[:error] = t('teams.error_already_on_team')\n-    elsif @user.last_requested_team != @team\n-      flash[:error] = t('teams.error_no_longer_requesting')\n-    elsif current_user.can_add_users_to_team?(@team)\n-      @user.assign_to_single_team!(@team)\n-      flash[:notice] = t('teams.successful_join')\n-    end\n-\n-    send_user_home\n-  end\n-\n-  def create\n-    @team = Team.build_ad_hoc_team(team_params, current_user, current_brand)\n-\n-    if @team.save\n-      flash[:notice] = t(\"teams.#{find_flash_text_key}_create\", count: AdHocInvite::EXPIRATION_DAYS)\n-      redirect_to initiatives_path\n-    else\n-      flash[:error] = @team.full_error_messages_with_line_breaks\n-      render :new\n-    end\n-  end\n-\n-  def edit\n-    @team = current_user.primary_team\n-  end\n-\n-  def join_request\n-    user_ids = @team.users.pluck(:id)\n-\n-    @team.add_join_request!(current_user)\n-    TeamMailer.join_request(current_user.id, user_ids, @team.id).deliver\n-\n-    flash[:attention] = t('teams.pending_join')\n-    redirect_to teams_path\n-  end\n-\n-  def leave\n-    @team.delete_invite_for_user!(current_user)\n-    current_user.reset_teams_to_default!\n-    flash[:notice] = t('teams.successful_leave')\n-    redirect_to initiatives_path\n-  end\n-\n-  def new\n-    @team = current_brand.teams.new\n-  end\n-\n   def show\n     @users = UserPresenter.user_leaderboard_since(@team, @time)\n \n@@ -175,39 +121,8 @@ def child_teams\n     render json: teams\n   end\n \n-  def invite_landing\n-    if current_user.present?\n-      current_user.add_to_ad_hoc_team!(@team)\n-      flash[:notice] = t('teams.successful_join')\n-      redirect_to initiatives_path\n-    else\n-      redirect_to_new_user_invite_path\n-    end\n-  end\n-\n-  def update\n-    @team = current_user.primary_team\n-    @team.last_editor = current_user\n-\n-    if @team.update_attributes(team_params)\n-      flash[:notice] = t(\"teams.#{find_flash_text_key}_update\", count: AdHocInvite::EXPIRATION_DAYS)\n-      redirect_to edit_teams_path\n-    else\n-      flash[:error] = @team.full_error_messages_with_line_breaks\n-      render :edit\n-    end\n-  end\n-\n   private\n \n-  def find_flash_text_key\n-    if team_params[:ad_hoc_invites_attributes].reject{|hash| hash[:email].empty? }.present?\n-      'success_with_expiration_warning_for'\n-    else\n-      'success_for'\n-    end\n-  end\n-\n   def find_team\n     @team = current_brand.teams.find_by_param(params[:id])\n   end\n@@ -217,10 +132,6 @@ def find_time\n     @time = leaderboard_time(@leaderboard_days_ago.to_i)\n   end\n \n-  def find_user\n-    @user = current_brand.users.find_by_id(params[:user_id])\n-  end\n-\n   def generate_cache_key(queried_teams)\n     max_updated_at = queried_teams.map(&:updated_at).max.to_i\n     teams_count = queried_teams.length\n@@ -232,44 +143,13 @@ def leaderboard_time(time)\n     time.zero? ? nil : time.days.ago\n   end\n \n-  def redirect_to_new_user_invite_path\n-    if current_brand.users.find_by_email(params[:email])\n-      session[:return_to] = invite_landing_team_url(@team, email: params[:email])\n-      redirect_to sign_in_path\n-    else # new user\n-      session[:assigned_team_id] = @team.id\n-      redirect_to new_user_path(invite_email: params[:email])\n-    end\n-  end\n-\n   def set_brand_impact_toggles\n     @hr_brand = current_brand.hr_only?\n     @show_sustainability_impact = current_brand.permit_sustainability?\n     @show_volunteering_impact = current_brand.permit_participation_events?\n   end\n \n-  def team_params\n-    params.require(:team).permit(\n-      :delete_image,\n-      :image,\n-      :image_cache,\n-      { ad_hoc_invites_attributes: [:email] },\n-      :name\n-    )\n-  end\n-\n   def teams_with_points(teams)\n     teams.with_points_sum_since(@time, current_brand).to_a\n   end\n-\n-  def verify_invite_email\n-    includes_email = @team.includes_email?(params[:email])\n-\n-    if current_user\n-      accept_invite = includes_email && current_user.email == params[:email]\n-      redirect_to root_url, notice: t('teams.error_expired_invite') unless accept_invite\n-    else\n-      send_user_home unless includes_email\n-    end\n-  end\n end"
  },
  {
    "sha": "8b0099fda1ce28c109e498f000ecb43c77b296c5",
    "filename": "app/helpers/application_helper.rb",
    "status": "modified",
    "additions": 0,
    "deletions": 4,
    "changes": 4,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/helpers/application_helper.rb",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/helpers/application_helper.rb",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/helpers/application_helper.rb?ref=24e31c350ac5fd0e0007a12d64cbf0df9fb8475d",
    "patch": "@@ -3,10 +3,6 @@ def accept_image_input(form, image)\n     form.cl_image_upload image, html: { accept: 'image/*' }\n   end\n \n-  def ad_hoc_teams?\n-    current_brand.ad_hoc_teams?\n-  end\n-\n   def buttons(&block)\n     content_tag(:div, class: 'control-group') do\n       content_tag(:div, class: 'controls') do"
  },
  {
    "sha": "f21969e813bba816710316c0c74198a9edaefe2d",
    "filename": "app/helpers/team_mailer_helper.rb",
    "status": "removed",
    "additions": 0,
    "deletions": 70,
    "changes": 70,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/72653644e6dc1d58f75b83d538bdfe8de4513199/app/helpers/team_mailer_helper.rb",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/72653644e6dc1d58f75b83d538bdfe8de4513199/app/helpers/team_mailer_helper.rb",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/helpers/team_mailer_helper.rb?ref=72653644e6dc1d58f75b83d538bdfe8de4513199",
    "patch": "@@ -1,70 +0,0 @@\n-module TeamMailerHelper\n-  def render_invite\n-    cta_link = invite_landing_team_url(@team, subdomain: @subdomain, email: @recipients.first)\n-\n-    context = {\n-      cta_link: cta_link,\n-      cta_text: html_invite_cta_text,\n-      headline: html_invite_headline,\n-      invite_expiration_warning: invite_expiration_warning\n-    }\n-\n-    render partial: 'notification', locals: context\n-  end\n-\n-  def render_join_request(cta_link)\n-    context = {\n-      cta_link: cta_link,\n-      cta_text: t('.cta_text'),\n-      headline: t('.headline', sender: @sender.name, team: @team.name)\n-    }\n-\n-    render partial: 'notification', locals: context\n-  end\n-\n-  def plaintext_invite_headline\n-    key = \"headline_plaintext_#{headline_key}\"\n-    t(\"team_mailer.invite.#{key}\", sender: @sender.name, team: @team.name)\n-  end\n-\n-  def plaintext_invite_cta\n-    key = @is_on_team ? 'cta_text_plaintext_on_team' : 'cta_text_plaintext_no_team'\n-\n-    url = invite_landing_team_url(@team,\n-      subdomain: @subdomain,\n-      email: @recipients.first)\n-\n-    t(\"team_mailer.invite.#{key}\", url: url)\n-  end\n-\n-  def invite_expiration_warning\n-    t('team_mailer.invite.expiration_warning', count: AdHocInvite::EXPIRATION_DAYS)\n-  end\n-\n-  def show_expiration_warning?\n-    @is_new_user || @is_on_team\n-  end\n-\n-  private\n-\n-  def headline_key\n-    if @is_new_user\n-      'new_user'\n-    elsif @is_on_team\n-      'existing_user'\n-    else # Existing user not on a team\n-      'new_user'\n-    end\n-  end\n-\n-  def html_invite_headline\n-    key = \"headline_#{headline_key}\"\n-\n-    t(\"team_mailer.invite.#{key}\", sender: @sender.name, team: @team.name)\n-  end\n-\n-  def html_invite_cta_text\n-    key = @is_on_team ? 'cta_text_on_team' : 'cta_text_no_team'\n-    t(\"team_mailer.invite.#{key}\")\n-  end\n-end"
  },
  {
    "sha": "68a590a68eefd8e37b2f60dfef3fb0a46fe4d677",
    "filename": "app/helpers/teams_helper.rb",
    "status": "modified",
    "additions": 0,
    "deletions": 48,
    "changes": 48,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/helpers/teams_helper.rb",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/helpers/teams_helper.rb",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/helpers/teams_helper.rb?ref=24e31c350ac5fd0e0007a12d64cbf0df9fb8475d",
    "patch": "@@ -1,13 +1,4 @@\n module TeamsHelper\n-  def all_users_but_you_on(team)\n-    team.users - [current_user]\n-  end\n-\n-  def invite_email_number(team, index)\n-    users_count = team.new_record? ? 1 : team.current_and_pending_users_count\n-    index + users_count + 1\n-  end\n-\n   def leaderboard_default(brand)\n     case brand.default_leaderboard_sort\n     when 1\n@@ -21,29 +12,6 @@ def leaderboard_default(brand)\n     end\n   end\n \n-  def leaderboard_options(brand)\n-    options_for_select(\n-      [\n-        [t('teams_helper.all_time'), team_path(@team, time: 0), { class: 'select-menu' }],\n-        [t('teams_helper.last_thirty_days'), team_path(@team, time: 30), { class: 'select-menu' }],\n-        [t('teams_helper.last_seven_days'), team_path(@team, time: 7), { class: 'select-menu' }],\n-        [t('teams_helper.today'), team_path(@team, time: 1), { class: 'select-menu' }]\n-      ], team_path(@team, time: brand.default_leaderboard_sort)\n-    )\n-  end\n-\n-  def join_request_button_class(user)\n-    if user.has_any_outstanding_team_join_requests?\n-      'button mini disabled full'\n-    else\n-      'button mini enabled'\n-    end\n-  end\n-\n-  def pending_invite_email_number(team, index)\n-    index + all_users_but_you_on(team).length + 2\n-  end\n-\n   def team_images(teams_with_images, current_team)\n     if teams_with_images.present?\n       images_team = teams_with_images.find{|t| t == current_team }\n@@ -53,22 +21,6 @@ def team_images(teams_with_images, current_team)\n     end\n   end\n \n-  def team_list_time_select(time, text)\n-    leaderboard_time_select text, teams_path(time: time), '#js-teams-list'\n-  end\n-\n-  def team_member_email_input_data_attributes\n-    attributes = {\n-      validation: 'validateOptionalEmail'\n-    }\n-\n-    if current_brand.email_domains_for_whitelisting.present?\n-      attributes[:domains] = current_brand.email_domains_for_whitelisting\n-    end\n-\n-    attributes\n-  end\n-\n   def user_list_time_select(time, text)\n     leaderboard_time_select text, team_path(time: time), '#js-users-list'\n   end"
  },
  {
    "sha": "4dae436c854e6a34f64d1565441623a0ec39bb39",
    "filename": "app/helpers/user_helper.rb",
    "status": "modified",
    "additions": 1,
    "deletions": 28,
    "changes": 29,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/helpers/user_helper.rb",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/helpers/user_helper.rb",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/helpers/user_helper.rb?ref=24e31c350ac5fd0e0007a12d64cbf0df9fb8475d",
    "patch": "@@ -13,22 +13,14 @@ def adjacent_scorers(users, index, range = 1)\n     users[(index - range)..(index + range)]\n   end\n \n-  def human_name_for_health(arg)\n-    t(\"user_helper.#{arg}\")\n-  end\n-\n   def join_team_message\n     if current_brand.landing_page_v5?\n       t('user_helper.contact_support_html', email: mail_to(current_brand.contact_email || wespire_contact_email))\n     else\n-      link_to t('user_helper.join_a_team_html'), join_team_path\n+      link_to t('user_helper.join_a_team_html'), edit_current_user_path\n     end\n   end\n \n-  def join_team_path\n-    current_brand.ad_hoc_teams? ? teams_path : edit_current_user_path\n-  end\n-\n   def locale_name_pairs\n     I18n.available_locales.map do |locale|\n       [I18n.t('locale_name', locale: locale), locale]\n@@ -43,15 +35,6 @@ def notify_to_string(arg)\n     t(\"user_helper.#{arg}\")\n   end\n \n-  def notify_target(arg)\n-    {\n-      notify_email_newsletter: :user_notify_email_newsletter,\n-      notify_email_notifications: :user_notify_email_notifications,\n-      notify_email_summary: :user_notify_email_summary,\n-      notify_project_promotion: :user_notify_project_promotion\n-    }[arg]\n-  end\n-\n   def show_terms_of_service?(user)\n     user.persisted? && user.terms_of_service_was.blank?\n   end\n@@ -60,16 +43,6 @@ def status_for(type)\n     'checked' if current_user.send(type)\n   end\n \n-  def team_equivalents_cache_key(team)\n-    \"equivalents/team/#{team.cache_key}\"\n-  end\n-\n-  def user_avatar_link(user)\n-    link_to user, class: 'stream-item-avatar left' do\n-      image_tag(avatar_path(user), size: '37x37', class: 'user-avatar')\n-    end\n-  end\n-\n   def user_name(user, is_current_user)\n     is_current_user ? t('user_helper.your') : user.first_name + \"'s\"\n   end"
  },
  {
    "sha": "18352d2588a2f4050e1483a99ecda973d282c3cb",
    "filename": "app/mailers/team_mailer.rb",
    "status": "removed",
    "additions": 0,
    "deletions": 54,
    "changes": 54,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/72653644e6dc1d58f75b83d538bdfe8de4513199/app/mailers/team_mailer.rb",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/72653644e6dc1d58f75b83d538bdfe8de4513199/app/mailers/team_mailer.rb",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/mailers/team_mailer.rb?ref=72653644e6dc1d58f75b83d538bdfe8de4513199",
    "patch": "@@ -1,54 +0,0 @@\n-class TeamMailer < MailerBase\n-  helper :application\n-\n-  def invite(inviter_id, invitee_email, team_id, is_new_user, is_on_team)\n-    @sender = User.find(inviter_id)\n-    @recipients = [invitee_email]\n-    @team = Team.find(team_id)\n-    @brand = @team.brand\n-    @is_new_user = is_new_user\n-    @is_on_team = is_on_team\n-\n-    mail_to(\n-      from: @sender,\n-      email: @recipients,\n-      brand: @brand,\n-      subject: invite_subject(is_new_user, is_on_team),\n-      layout: 'salted'\n-    )\n-  end\n-\n-  def join_request(requester_id, team_member_ids, team_id)\n-    @sender = User.find(requester_id)\n-    @recipients = User.where(id: team_member_ids).to_a\n-    @team = Team.find(team_id)\n-    @brand = @team.brand\n-\n-    subject = I18n.t('team_mailer.join_request.base_headline',\n-      sender: @sender.name,\n-      team: @team.name)\n-\n-    mail_to(\n-      from: @sender,\n-      email: @recipients.map(&:email),\n-      brand: @brand,\n-      subject: subject,\n-      layout: 'salted'\n-    )\n-  end\n-\n-  private\n-\n-  def invite_subject(is_new_user, is_on_team)\n-    key =\n-      if is_new_user || !is_on_team\n-        'subject_new_user'\n-      else\n-        'subject_existing_user'\n-      end\n-\n-    I18n.t(\"team_mailer.invite.#{key}\",\n-      sender: @sender.name,\n-      team: @team.name)\n-  end\n-end"
  },
  {
    "sha": "50c7f63e97071943ad415631a7b7ca874abf4f11",
    "filename": "app/models/ad_hoc_invite.rb",
    "status": "removed",
    "additions": 0,
    "deletions": 77,
    "changes": 77,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/72653644e6dc1d58f75b83d538bdfe8de4513199/app/models/ad_hoc_invite.rb",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/72653644e6dc1d58f75b83d538bdfe8de4513199/app/models/ad_hoc_invite.rb",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/models/ad_hoc_invite.rb?ref=72653644e6dc1d58f75b83d538bdfe8de4513199",
    "patch": "@@ -1,77 +0,0 @@\n-class AdHocInvite < ActiveRecord::Base\n-  EXPIRATION_DAYS = 3\n-\n-  # Concerns\n-  include ErrorMessages\n-\n-  # Callbacks\n-  after_create :email_new_invitee!\n-  before_validation :normalize_email\n-\n-  # Associations\n-  belongs_to :team, inverse_of: :ad_hoc_invites\n-\n-  # Attributes & Delegations\n-  attr_reader :employee_number, :whitelist_exempt # Duck typing to fit whitelist validation\n-\n-  delegate :brand, to: :team\n-\n-  # Validations\n-  validates :email, presence: true\n-  validates :team, presence: true\n-  validate :email_eligible\n-  validate :whitelist\n-\n-  # Class Methods\n-  def self.active\n-    where(\"\n-      created_at + INTERVAL '#{EXPIRATION_DAYS} days' >= ? AND\n-      email NOT IN (\n-        SELECT email\n-        FROM users\n-        WHERE users.primary_team_id = ad_hoc_invites.team_id\n-      )\n-    \", Time.current)\n-  end\n-\n-  def validation_required_or_key_changed?(key)\n-    # ad-hoc team invites don't have employee numbers, so don't validate those keys\n-    if key == 'email'\n-      true\n-    end\n-  end\n-\n-  private\n-\n-  def email_new_invitee!\n-    existing_user = brand.users.find_by_email(email)\n-    is_new_user = !existing_user\n-    is_on_team = existing_user.present? && existing_user.on_ad_hoc_team?\n-\n-    existing_user.assign_to_single_team!(team) if existing_user && !is_on_team\n-\n-    TeamMailer.invite(team.sender.id, email, team_id, is_new_user, is_on_team).deliver\n-  end\n-\n-  def email_eligible\n-    existing_user = User.where(email: email).any?\n-    existing_active_invite = team.invitee_emails.include?(email)\n-    draft_user = User.new(brand: brand, email: email)\n-    draft_user.valid?\n-\n-    email_invalid_and_unregistered =\n-      draft_user.errors[:email].any? && !draft_user.has_whitelist_email_validation_error? && !existing_user\n-\n-    if email_invalid_and_unregistered || existing_active_invite\n-      errors.add :email, :invalid_email, email: email\n-    end\n-  end\n-\n-  def normalize_email\n-    self.email = email.downcase\n-  end\n-\n-  def whitelist\n-    WhitelistValidator.new(self).validate\n-  end\n-end"
  },
  {
    "sha": "db1db23490433168e5c336df30ffc0be8da4273c",
    "filename": "app/models/brand.rb",
    "status": "modified",
    "additions": 3,
    "deletions": 8,
    "changes": 11,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/models/brand.rb",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/models/brand.rb",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/models/brand.rb?ref=24e31c350ac5fd0e0007a12d64cbf0df9fb8475d",
    "patch": "@@ -48,13 +48,12 @@ module ResourcePriceSettings\n   end\n \n   module TeamSetupTypes\n-    AD_HOC = 'ad-hoc'.freeze\n     ASSIGNED = 'assigned'.freeze\n     DEFAULT = 'default'.freeze\n \n-    ALL = [AD_HOC, ASSIGNED, DEFAULT].freeze\n-    BRAND_ASSIGNABLE = [AD_HOC, DEFAULT].freeze\n-    DEFERRED = [AD_HOC, ASSIGNED].freeze\n+    ALL = [ASSIGNED, DEFAULT].freeze\n+    BRAND_ASSIGNABLE = [DEFAULT].freeze\n+    DEFERRED = [ASSIGNED].freeze\n     USER_SELECTABLE = [ASSIGNED, DEFAULT].freeze\n   end\n \n@@ -535,10 +534,6 @@ def self.find_by_param(param)\n     end\n   end\n \n-  def ad_hoc_teams?\n-    team_setup_type == TeamSetupTypes::AD_HOC\n-  end\n-\n   def all_visible_acts\n     Act.visible_to(self, include_inactive: true)\n   end"
  },
  {
    "sha": "f54f6557ade818bf4a3793e9d336e67e22b9332f",
    "filename": "app/models/concerns/ad_hoc_team.rb",
    "status": "removed",
    "additions": 0,
    "deletions": 103,
    "changes": 103,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/72653644e6dc1d58f75b83d538bdfe8de4513199/app/models/concerns/ad_hoc_team.rb",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/72653644e6dc1d58f75b83d538bdfe8de4513199/app/models/concerns/ad_hoc_team.rb",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/models/concerns/ad_hoc_team.rb?ref=72653644e6dc1d58f75b83d538bdfe8de4513199",
    "patch": "@@ -1,103 +0,0 @@\n-module AdHocTeam\n-  extend ActiveSupport::Concern\n-\n-  REQUEST_WINDOW_HOURS = 24\n-  MAX_AD_HOC_MEMBERS = 10\n-\n-  # Temp data\n-  attr_accessor :seed_user, :last_editor\n-\n-  included do\n-    after_create :set_seed_user, if: :new_ad_hoc_team?\n-\n-    delegate :ad_hoc_teams?, to: :brand, allow_nil: true\n-\n-    has_many :ad_hoc_invites, inverse_of: :team\n-    accepts_nested_attributes_for :ad_hoc_invites, reject_if: :all_blank\n-\n-    validate :verify_seed_user, if: :new_ad_hoc_team?, on: :create\n-\n-    extend ClassMethods\n-  end\n-\n-  module ClassMethods\n-    def build_ad_hoc_team(team_attributes, user, brand)\n-      team = brand.teams.new(team_attributes)\n-      team.set = brand.primary_team_set\n-      team.seed_user = user\n-      team\n-    end\n-  end\n-\n-  def add_join_request!(user)\n-    user.update_attributes!(\n-      last_requested_team: self,\n-      last_requested_team_timestamp: Time.current\n-    )\n-  end\n-\n-  def current_and_pending_users_count\n-    users.length + invitee_emails.length\n-  end\n-\n-  def delete_invite_for_user!(user)\n-    ad_hoc_invites.where(email: user.email).delete_all\n-  end\n-\n-  def has_join_request_from?(user)\n-    cutoff_time = REQUEST_WINDOW_HOURS.hours.ago\n-    timestamp = user.last_requested_team_timestamp\n-    last_request = user.last_requested_team\n-\n-    last_request == self && timestamp.present? && timestamp > cutoff_time\n-  end\n-\n-  def full?\n-    users.length >= MAX_AD_HOC_MEMBERS\n-  end\n-\n-  def full_with_pending?\n-    current_and_pending_users_count >= MAX_AD_HOC_MEMBERS\n-  end\n-\n-  def includes_email?(email)\n-    all_emails = invitee_emails + users.pluck(:email)\n-    all_emails.include?(email)\n-  end\n-\n-  def invite_slots\n-    if new_record?\n-      MAX_AD_HOC_MEMBERS - 1\n-    elsif current_and_pending_users_count > MAX_AD_HOC_MEMBERS\n-      0\n-    else\n-      MAX_AD_HOC_MEMBERS - current_and_pending_users_count\n-    end\n-  end\n-\n-  def invitee_emails\n-    ad_hoc_invites.active.order(:email).pluck(:email)\n-  end\n-\n-  def room_for_more_ad_hoc_users?\n-    ad_hoc_teams? && !full_with_pending?\n-  end\n-\n-  def sender\n-    last_editor || seed_user || users.first\n-  end\n-\n-  private\n-\n-  def new_ad_hoc_team?\n-    ad_hoc_teams? && users.empty? && !limbo?\n-  end\n-\n-  def verify_seed_user\n-    errors.add :seed_user, :seed_user_required if seed_user.blank?\n-  end\n-\n-  def set_seed_user\n-    seed_user.update_attributes!(primary_team: self)\n-  end\n-end"
  },
  {
    "sha": "ff4d9fc1357299be20aaee6285f5960dd0c99316",
    "filename": "app/models/team.rb",
    "status": "modified",
    "additions": 1,
    "deletions": 4,
    "changes": 5,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/models/team.rb",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/models/team.rb",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/models/team.rb?ref=24e31c350ac5fd0e0007a12d64cbf0df9fb8475d",
    "patch": "@@ -3,8 +3,6 @@ class Team < ActiveRecord::Base\n   MAX_SLUG_LENGTH = 40\n   SEARCHABLE_COLUMNS = %i(name_translations).freeze\n \n-  include AdHocTeam\n-\n   module Sets\n     BUILDING = 'building'.freeze\n     CUSTOM = 'custom'.freeze\n@@ -237,8 +235,7 @@ def recent_points_sum?\n   end\n \n   def show_participation?\n-    is_eligible_team = potential_users.present? && !ad_hoc_teams?\n-    brand.display_team_participation? && is_eligible_team\n+    brand.display_team_participation? && potential_users.present?\n   end\n \n   def teams_including_children"
  },
  {
    "sha": "a9030e167968ee573d1f5d684f2e335b609d0f9b",
    "filename": "app/models/user.rb",
    "status": "modified",
    "additions": 0,
    "deletions": 27,
    "changes": 27,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/models/user.rb",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/models/user.rb",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/models/user.rb?ref=24e31c350ac5fd0e0007a12d64cbf0df9fb8475d",
    "patch": "@@ -639,12 +639,6 @@ def acts_taken(act = nil)\n     user_scores.count\n   end\n \n-  def add_to_ad_hoc_team!(team)\n-    User.transaction do\n-      assign_to_single_team!(team) unless primary_team_id == team.id\n-    end\n-  end\n-\n   def api_avatar(_host)\n     if image.present?\n       uri = Addressable::URI.parse(image.url(:thumb_small))\n@@ -696,10 +690,6 @@ def can_add_initiative?(initiative)\n     initiative_available?(initiative)\n   end\n \n-  def can_add_users_to_team?(invitee_team)\n-    invitee_team.room_for_more_ad_hoc_users? && primary_team == invitee_team\n-  end\n-\n   def can_ab_test?\n     locale == I18n.default_locale.to_s\n   end\n@@ -799,11 +789,6 @@ def force_whitelist_validation=(value)\n     @force_whitelist_validation = ActiveRecord::ConnectionAdapters::Column.value_to_boolean(value)\n   end\n \n-  def has_any_outstanding_team_join_requests?\n-    timestamp = last_requested_team_timestamp\n-    timestamp.present? && timestamp > AdHocTeam::REQUEST_WINDOW_HOURS.hours.ago\n-  end\n-\n   def has_registered_personal_info?\n     can_log_in? && first_name.present?\n   end\n@@ -910,10 +895,6 @@ def next_invite_achievement\n     Achievement.visible_to(self, unordered: true).next_invite_achievement_for(self)\n   end\n \n-  def not_in_project_and_doesnt_need_ad_hoc_team?(initiative)\n-    !(not_on_ad_hoc_team_yet? || in_project?(initiative))\n-  end\n-\n   def notify!(notifiable, verb)\n     notifications.where(\n       notifiable_id: notifiable.id,\n@@ -938,18 +919,10 @@ def nth_times_act_completed(act_id)\n     scores.select{|s| s.user_id == id }.map{|s| s.place.to_i }\n   end\n \n-  def on_ad_hoc_team?\n-    primary_team.present? && !primary_team.limbo? && primary_team.ad_hoc_teams?\n-  end\n-\n   def on_first_request_today\n     update_attribute :last_visited_at, Time.current\n   end\n \n-  def not_on_ad_hoc_team_yet?\n-    primary_team.limbo? && primary_team.ad_hoc_teams?\n-  end\n-\n   def ordered_achievements_earned\n     achievements.order('scores.created_at DESC').to_a.uniq\n   end"
  },
  {
    "sha": "9838d63bad087a5376c2c68f0247e0ab412b73b8",
    "filename": "app/views/competition_projects/_show.html.haml",
    "status": "modified",
    "additions": 1,
    "deletions": 9,
    "changes": 10,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/views/competition_projects/_show.html.haml",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/views/competition_projects/_show.html.haml",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/views/competition_projects/_show.html.haml?ref=24e31c350ac5fd0e0007a12d64cbf0df9fb8475d",
    "patch": "@@ -102,22 +102,14 @@\n         %span.ss-icon.ss-delete\n         = t('.forfeit_competition')\n \n-  - if current_user.not_in_project_and_doesnt_need_ad_hoc_team?(@project)\n-    -# Enter competition modal\n-    = render partial: 'competition_projects/modal_join', locals: { initiative: @project }\n-\n-  - content_for :modal do\n-    = render 'initiatives/join_ad_hoc_team_modal'\n+  = render partial: 'competition_projects/modal_join', locals: { initiative: @project }\n \n   - content_for :tail do\n     = pageless_feeds @events.num_pages, initiative_events_path(@project, params.except(:action, :controller, :id))\n     = js_on_page_load \"PG.env.initiativeId = '#{@project.id}'; PG.competitionProjects.show()\"\n     - analytics_event('Project show visited', project_id: @project.id,\n       project_name: @project.name_en, project_type: @project.project_type)\n \n-    - if current_user.not_on_ad_hoc_team_yet?\n-      = js_on_page_load \"PG.competitionProjects.showJoinTeamModal()\"\n-\n     -# Temp secondary analytics event to triangulate data integrity issues\n     = js_on_page_load \"Analytics.track('Project show visited (Front End)',\n       { project_id: '#{@project.id}', project_name: \\\"#{url_encode(@project.name_en)}\\\" })\""
  },
  {
    "sha": "f58be33e49e231fd12e793d8b79e21472fbb811d",
    "filename": "app/views/initiatives/_join_ad_hoc_team_modal.html.haml",
    "status": "removed",
    "additions": 0,
    "deletions": 13,
    "changes": 13,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/72653644e6dc1d58f75b83d538bdfe8de4513199/app/views/initiatives/_join_ad_hoc_team_modal.html.haml",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/72653644e6dc1d58f75b83d538bdfe8de4513199/app/views/initiatives/_join_ad_hoc_team_modal.html.haml",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/views/initiatives/_join_ad_hoc_team_modal.html.haml?ref=72653644e6dc1d58f75b83d538bdfe8de4513199",
    "patch": "@@ -1,13 +0,0 @@\n-#join-ad-hoc-team-modal.join-team-modal.modal.hidden\n-  .modal-body\n-    %p= t('.heading')\n-\n-    %p<\n-      = link_to t('.join_text'), teams_path\n-\n-      %br\n-\n-      = t('.or')\n-      &nbsp;\n-      = link_to t('.create_text'), new_team_path\n-"
  },
  {
    "sha": "5a8a270cce42b76108d64a412c0334dd7d137b02",
    "filename": "app/views/initiatives/index.html.haml",
    "status": "modified",
    "additions": 0,
    "deletions": 5,
    "changes": 5,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/views/initiatives/index.html.haml",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/views/initiatives/index.html.haml",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/views/initiatives/index.html.haml?ref=24e31c350ac5fd0e0007a12d64cbf0df9fb8475d",
    "patch": "@@ -21,14 +21,9 @@\n \n = render 'limit_warning_modal'\n \n-- if current_brand.ad_hoc_teams?\n-  - content_for :modal do\n-    = render 'join_ad_hoc_team_modal'\n-\n - content_for :tail do\n   - if @show_intro_activities\n     = js_on_page_load 'PG.introTour.activities()'\n-  = js_on_page_load \"PG.env.userNotOnTeamYet = #{current_user.not_on_ad_hoc_team_yet?}\"\n   = js_on_page_load \"PG.env.userInitiativesCount = #{current_user.active_initiatives.count}; PG.initiatives.index()\"\n   - analytics_event 'Projects index visited'\n "
  },
  {
    "sha": "7b159a2da6b92cff825afdbdbcacd8f18c6a988b",
    "filename": "app/views/team_mailer/_notification.html.haml",
    "status": "removed",
    "additions": 0,
    "deletions": 20,
    "changes": 20,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/72653644e6dc1d58f75b83d538bdfe8de4513199/app/views/team_mailer/_notification.html.haml",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/72653644e6dc1d58f75b83d538bdfe8de4513199/app/views/team_mailer/_notification.html.haml",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/views/team_mailer/_notification.html.haml?ref=72653644e6dc1d58f75b83d538bdfe8de4513199",
    "patch": "@@ -1,20 +0,0 @@\n-%table.responsive-table{ align: 'center', cellpadding: '0', cellspacing: '0',\n-  style: 'background-color: #FFF; border: 1px solid #E3E7E7;', width: '575' }\n-  %tr\n-    %td{ align: 'center', style: 'color: #666; font-size: 26px; padding: 30px 0 0 0' }\n-      %center\n-        = image_tag large_avatar_url(@sender),\n-          style: 'height: 128px; width: 128px;'\n-\n-  %tr\n-    %td{ align: 'center', style: 'color: #666; font-size: 26px; padding: 10px 60px 20px' }\n-      %span= headline.html_safe\n-\n-  - if show_expiration_warning?\n-    %tr\n-      %td{ align: 'center', style: 'color: #666; font-size: 26px; padding: 10px 60px 20px' }\n-        %span= invite_expiration_warning\n-\n-  %tr\n-    %td{ style: 'padding: 10px 60px 30px 60px;' }\n-      = render partial: 'shared/cta_button', locals: { text: cta_text, url: cta_link }"
  },
  {
    "sha": "d0eb1b5bea590c8e62ab071ee1d0647045251872",
    "filename": "app/views/team_mailer/invite.html.haml",
    "status": "removed",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/72653644e6dc1d58f75b83d538bdfe8de4513199/app/views/team_mailer/invite.html.haml",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/72653644e6dc1d58f75b83d538bdfe8de4513199/app/views/team_mailer/invite.html.haml",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/views/team_mailer/invite.html.haml?ref=72653644e6dc1d58f75b83d538bdfe8de4513199",
    "patch": "@@ -1 +0,0 @@\n-= render_invite"
  },
  {
    "sha": "b7340a1cfa0a283ceff9c097904d2e446631888d",
    "filename": "app/views/team_mailer/invite.text.erb",
    "status": "removed",
    "additions": 0,
    "deletions": 5,
    "changes": 5,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/72653644e6dc1d58f75b83d538bdfe8de4513199/app/views/team_mailer/invite.text.erb",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/72653644e6dc1d58f75b83d538bdfe8de4513199/app/views/team_mailer/invite.text.erb",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/views/team_mailer/invite.text.erb?ref=72653644e6dc1d58f75b83d538bdfe8de4513199",
    "patch": "@@ -1,5 +0,0 @@\n-<%= plaintext_invite_headline %>\n-\n-<%= plaintext_invite_cta %>\n-\n-<%= invite_expiration_warning if show_expiration_warning? %>"
  },
  {
    "sha": "6707fb1ad08fc39ce963bf03bb7c236a0a42dd9f",
    "filename": "app/views/team_mailer/join_request.html.haml",
    "status": "removed",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/72653644e6dc1d58f75b83d538bdfe8de4513199/app/views/team_mailer/join_request.html.haml",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/72653644e6dc1d58f75b83d538bdfe8de4513199/app/views/team_mailer/join_request.html.haml",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/views/team_mailer/join_request.html.haml?ref=72653644e6dc1d58f75b83d538bdfe8de4513199",
    "patch": "@@ -1 +0,0 @@\n-= render_join_request(accept_user_team_url(@team, user_id: @sender.id, subdomain: @subdomain))"
  },
  {
    "sha": "65be8d27eb15f147c973b6c6d2aa467f43f80fd9",
    "filename": "app/views/team_mailer/join_request.text.erb",
    "status": "removed",
    "additions": 0,
    "deletions": 3,
    "changes": 3,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/72653644e6dc1d58f75b83d538bdfe8de4513199/app/views/team_mailer/join_request.text.erb",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/72653644e6dc1d58f75b83d538bdfe8de4513199/app/views/team_mailer/join_request.text.erb",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/views/team_mailer/join_request.text.erb?ref=72653644e6dc1d58f75b83d538bdfe8de4513199",
    "patch": "@@ -1,3 +0,0 @@\n-<%= t('.headline_plaintext', sender: @sender.name, team: @team.name) %>\n-\n-<%= t('.cta_text_plaintext', url: accept_user_team_url(@team, user_id: @sender.id, subdomain: @subdomain)) %>"
  },
  {
    "sha": "4bf203d4d91329615c72a43080aeff04dab18fb8",
    "filename": "app/views/teams/_form.html.haml",
    "status": "removed",
    "additions": 0,
    "deletions": 64,
    "changes": 64,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/72653644e6dc1d58f75b83d538bdfe8de4513199/app/views/teams/_form.html.haml",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/72653644e6dc1d58f75b83d538bdfe8de4513199/app/views/teams/_form.html.haml",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/views/teams/_form.html.haml?ref=72653644e6dc1d58f75b83d538bdfe8de4513199",
    "patch": "@@ -1,64 +0,0 @@\n-.columns\n-  = f.input :name, label: t('.team_name')\n-\n-  .controls\n-    .image-container\n-      = f.input :image, as: :cloudinary_image,\n-        input_html: { label_text: t('.upload') },\n-        label: false\n-\n-  .controls\n-    .label.control_label= t('.team_members')\n-    .hint= t('.members_hint')\n-\n-.controls\n-  %label.label.control_label.columns{ for: 'email_1' }<\n-    = t('.new_member_name', number: 1)\n-  .row\n-    .medium-3.email-field.columns\n-      = text_field_tag  'email_1', t('.you'), disabled: true, class: 'disabled'\n-    .medium-3.validation-wrapper.columns\n-      .leave-link\n-        - unless @team.new_record?\n-          = link_to t('.leave'), leave_team_path(@team), method: :post\n-\n-- all_users_but_you_on(@team).each_with_index do |user, index|\n-  .controls\n-    %label.label.control_label.columns{ for: \"email_#{index + 2}\" }<\n-      = t('.new_member_name', number: index + 2)\n-    .row\n-      .medium-3.columns.email-field\n-        = text_field_tag  \"email_#{index + 2}\", user.email, disabled: true, class: 'disabled'\n-\n-- @team.invitee_emails.each_with_index do |email, index|\n-  .controls\n-    %label.label.control_label.columns{ for: \"team_invitee_emails_#{index}\" }<\n-      = t('.new_member_name', number: pending_invite_email_number(@team, index))\n-    .row\n-      .medium-3.columns.email-field\n-        = text_field_tag  \"team[invitee_emails][]\",\n-          email,\n-          id: \"team_invitee_emails_#{index}\",\n-          class: 'disabled',\n-          disabled: true\n-      .medium-3.columns.validation-wrapper.validation-container\n-        .pending= t('.invite_pending')\n-\n-- @team.invite_slots.times do |index|\n-  .controls\n-    %label.label.control_label.columns{ for: \"team_ad_hoc_invites_attributes_#{index}_email\" }<\n-      = t('.new_member_name', number: invite_email_number(@team, index))\n-    .row\n-      .medium-3.columns.email-field\n-        = text_field_tag 'team[ad_hoc_invites_attributes][][email]',\n-          '',\n-          placeholder: t('.member_prompt'),\n-          id: \"team_ad_hoc_invites_attributes_#{index}_email\",\n-          data: team_member_email_input_data_attributes\n-\n-      .medium-3.columns.validation-wrapper.validation-container\n-        .validation-message\n-\n-- content_for :tail do\n-  = js_on_page_load 'PG.uploadProgress.bindUploadProgress()'\n-  = js_on_page_load 'PG.onboardingValidator.bindLiveValidations()'"
  },
  {
    "sha": "edc4c77061fbaf61dd60eeefef631c907812e524",
    "filename": "app/views/teams/_join_button.html.haml",
    "status": "removed",
    "additions": 0,
    "deletions": 10,
    "changes": 10,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/72653644e6dc1d58f75b83d538bdfe8de4513199/app/views/teams/_join_button.html.haml",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/72653644e6dc1d58f75b83d538bdfe8de4513199/app/views/teams/_join_button.html.haml",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/views/teams/_join_button.html.haml?ref=72653644e6dc1d58f75b83d538bdfe8de4513199",
    "patch": "@@ -1,10 +0,0 @@\n-- unless current_user.on_ad_hoc_team?\n-  - if team.full?\n-    = link_to_void t('.full'), class: 'button mini disabled full'\n-  - elsif team.full_with_pending?\n-    .tooltip{ title: t('.pending_tooltip') }\n-      = link_to_void t('.full_with_pending'), class: 'button mini disabled full'\n-  - elsif team.has_join_request_from?(current_user)\n-    = link_to_void t('.pending'), class: 'button mini disabled'\n-  - else\n-    = link_to t('.request'), join_request_team_path(team), class: join_request_button_class(current_user)"
  },
  {
    "sha": "cf59aa7dbd80716559544fd13f7bd101b21b768b",
    "filename": "app/views/teams/_list.html.haml",
    "status": "modified",
    "additions": 0,
    "deletions": 4,
    "changes": 4,
    "blob_url": "https://github.com/PracticallyGreen/pg/blob/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/views/teams/_list.html.haml",
    "raw_url": "https://github.com/PracticallyGreen/pg/raw/24e31c350ac5fd0e0007a12d64cbf0df9fb8475d/app/views/teams/_list.html.haml",
    "contents_url": "https://api.github.com/repos/PracticallyGreen/pg/contents/app/views/teams/_list.html.haml?ref=24e31c350ac5fd0e0007a12d64cbf0df9fb8475d",
    "patch": "@@ -17,10 +17,6 @@\n             %h4= team.name\n             - if team.recent_points_sum?\n               %span #{number_with_delimiter team.recent_points_sum} #{t('shared.point_no_number', count: team.recent_points_sum)}\n-          - if current_brand.ad_hoc_teams?\n-            %span.ss-icon.ss-navigateright\n-            .team-info.action-button.hide-for-small-only\n-              = render partial: 'join_button', locals: { team: team }\n \n - else\n   #js-teams-list"
  }
]
